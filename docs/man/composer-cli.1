.\" Man page generated from reStructuredText.
.
.TH "COMPOSER-CLI" "1" "Apr 27, 2020" "28.14.42" "Lorax"
.SH NAME
composer-cli \- Composer Cmdline Utility Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.INDENT 0.0
.TP
.B Authors
Brian C. Lane <\fI\%bcl@redhat.com\fP>
.UNINDENT
.sp
\fBcomposer\-cli\fP is used to interact with the \fBlorax\-composer\fP API server, managing blueprints, exploring available packages, and building new images.
.sp
It requires \fI\%lorax\-composer\fP to be installed on the
local system, and the user running it needs to be a member of the \fBweldr\fP
group. They do not need to be root, but all of the \fI\%security precautions\fP apply.
.SH COMPOSER-CLI CMDLINE ARGUMENTS
.SH EDIT A BLUEPRINT
.sp
Start out by listing the available blueprints using \fBcomposer\-cli blueprints
list\fP, pick one and save it to the local directory by running \fBcomposer\-cli
blueprints save http\-server\fP\&. If there are no blueprints available you can
copy one of the examples \fI\%from the test suite\fP\&.
.sp
Edit the file (it will be saved with a .toml extension) and change the
description, add a package or module to it. Send it back to the server by
running \fBcomposer\-cli blueprints push http\-server.toml\fP\&. You can verify that it was
saved by viewing the changelog \- \fBcomposer\-cli blueprints changes http\-server\fP\&.
.SH BUILD AN IMAGE
.sp
Build a \fBqcow2\fP disk image from this blueprint by running \fBcomposer\-cli
compose start http\-server qcow2\fP\&. It will print a UUID that you can use to
keep track of the build. You can also cancel the build if needed.
.sp
The available types of images is displayed by \fBcomposer\-cli compose types\fP\&.
Currently this consists of: alibaba, ami, ext4\-filesystem, google, live\-iso,
openstack, partitioned\-disk, qcow2, tar, vhd, vmdk
.SH MONITOR THE BUILD STATUS
.sp
Monitor it using \fBcomposer\-cli compose status\fP, which will show the status of
all the builds on the system. You can view the end of the anaconda build logs
once it is in the \fBRUNNING\fP state using \fBcomposer\-cli compose log UUID\fP
where UUID is the UUID returned by the start command.
.sp
Once the build is in the \fBFINISHED\fP state you can download the image.
.SH DOWNLOAD THE IMAGE
.sp
Downloading the final image is done with \fBcomposer\-cli compose image UUID\fP and it will
save the qcow2 image as \fBUUID\-disk.qcow2\fP which you can then use to boot a VM like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
qemu\-kvm \-\-name test\-image \-m 1024 \-hda ./UUID\-disk.qcow2
.ft P
.fi
.UNINDENT
.UNINDENT
.SH AUTHOR
Weldr Team
.SH COPYRIGHT
2018-2019, Red Hat, Inc.
.\" Generated by docutils manpage writer.
.
